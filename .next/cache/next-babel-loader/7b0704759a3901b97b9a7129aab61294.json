{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { INITIALIZE } from \"./types\";\nexport var initialize = function initialize(user) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: INITIALIZE,\n                    payload: {\n                      user: user\n                    }\n                  });\n                } catch (e) {\n                  console.error(e);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/reducers/user/actions.ts"],"names":["INITIALIZE","initialize","user","dispatch","type","payload","e","console","error"],"mappings":";;AAEA,SAASA,UAAT;AAYA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAA8E;AACpG;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACH,oBAAI;AACAA,kBAAAA,QAAQ,CAAC;AACLC,oBAAAA,IAAI,EAAEJ,UADD;AAELK,oBAAAA,OAAO,EAAE;AACLH,sBAAAA,IAAI,EAAJA;AADK;AAFJ,mBAAD,CAAR;AAMH,iBAPD,CAOE,OAAOI,CAAP,EAAU;AACRC,kBAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;;AAVE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYH,CAbM","sourcesContent":["import { ThunkAction } from 'redux-thunk'\nimport { State } from 'reducers/user/index'\nimport { INITIALIZE } from 'reducers/user/types'\nimport { UserType } from 'types/index'\n\ntype Initialize = {\n    type: typeof INITIALIZE\n    payload: {\n        user: UserType\n    }\n}\n\nexport type Action = Initialize\n\nexport const initialize = (user: UserType): ThunkAction<Promise<void>, State, undefined, Initialize> => {\n    return async (dispatch): Promise<void> => {\n        try {\n            dispatch({\n                type: INITIALIZE,\n                payload: {\n                    user,\n                },\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}