{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseApp from \"../../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../../assets/constant\"; // import { PostType } from 'types/index'\n\nimport PostDetail from \"../../components/templates/posts/detail\";\n\nvar PagePostDetail = function PagePostDetail() {\n  var router = useRouter();\n  var postId = router.query.postId;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var loadFirestore = React.useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var db, docRef, postData, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(postId);\n\n            if (postId) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(React.Fragment, null));\n\n          case 3:\n            db = firebaseApp.firestore();\n            docRef = db.collection(COLLECTIONS.POSTS);\n            _context.next = 7;\n            return docRef.doc(postId).get()[\"catch\"](function (e) {\n              return console.error(e);\n            });\n\n          case 7:\n            postData = _context.sent;\n            data = postData && postData.exists ? _objectSpread({}, postData.data(), {\n              id: postData.id\n            }) : null;\n            setData(data);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [postId]);\n  React.useEffect(function () {\n    loadFirestore();\n  }, [loadFirestore]);\n  return __jsx(PostDetail, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nexport default PagePostDetail;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx"],"names":["React","useRouter","firebaseApp","COLLECTIONS","PostDetail","PagePostDetail","router","postId","query","useState","data","setData","loadFirestore","useCallback","console","log","db","firestore","docRef","collection","POSTS","doc","get","e","error","postData","exists","id","useEffect"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,gC,CACA;;AACA,OAAOC,UAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmB;AACtC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAMM,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaD,MAA5B;;AAFsC,wBAGdP,KAAK,CAACS,QAAN,CAA2B,IAA3B,CAHc;AAAA;AAAA,MAG/BC,IAH+B;AAAA,MAGzBC,OAHyB;;AAKtC,MAAMC,aAAa,GAAGZ,KAAK,CAACa,WAAN;AAAA;AAAA;AAAA;AAAA,2BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpCC,YAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AADoC,gBAE/BA,MAF+B;AAAA;AAAA;AAAA;;AAAA,6CAEhB,2BAFgB;;AAAA;AAG9BS,YAAAA,EAH8B,GAGzBd,WAAW,CAACe,SAAZ,EAHyB;AAI9BC,YAAAA,MAJ8B,GAIrBF,EAAE,CAACG,UAAH,CAAchB,WAAW,CAACiB,KAA1B,CAJqB;AAAA;AAAA,mBAKbF,MAAM,CACxBG,GADkB,CACdd,MADc,EAElBe,GAFkB,YAGZ,UAAAC,CAAC;AAAA,qBAAIT,OAAO,CAACU,KAAR,CAAcD,CAAd,CAAJ;AAAA,aAHW,CALa;;AAAA;AAK9BE,YAAAA,QAL8B;AAS9Bf,YAAAA,IAT8B,GASvBe,QAAQ,IAAIA,QAAQ,CAACC,MAArB,qBAAmCD,QAAQ,CAACf,IAAT,EAAnC;AAAoDiB,cAAAA,EAAE,EAAEF,QAAQ,CAACE;AAAjE,iBAAwE,IATjD;AAUpChB,YAAAA,OAAO,CAACD,IAAD,CAAP;;AAVoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB,IAWnB,CAACH,MAAD,CAXmB,CAAtB;AAaAP,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,YAAM;AAClBhB,IAAAA,aAAa;AAChB,GAFD,EAEG,CAACA,aAAD,CAFH;AAIA,SAAO,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAvBD;;AAyBA,eAAeL,cAAf","sourcesContent":["import * as React from 'react'\nimport { useRouter } from 'next/router'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\n// import { PostType } from 'types/index'\nimport PostDetail from 'components/templates/posts/detail'\n\nconst PagePostDetail = (): JSX.Element => {\n    const router = useRouter()\n    const postId = router.query.postId as string\n    const [data, setData] = React.useState<any | null>(null)\n\n    const loadFirestore = React.useCallback(async () => {\n        console.log(postId)\n        if (!postId) return <></>\n        const db = firebaseApp.firestore()\n        const docRef = db.collection(COLLECTIONS.POSTS)\n        const postData = await docRef\n            .doc(postId)\n            .get()\n            .catch(e => console.error(e))\n        const data = postData && postData.exists ? { ...postData.data(), id: postData.id } : null\n        setData(data)\n    }, [postId])\n\n    React.useEffect(() => {\n        loadFirestore()\n    }, [loadFirestore])\n\n    return <PostDetail data={data} />\n}\n\nexport default PagePostDetail\n"]},"metadata":{},"sourceType":"module"}