{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport firebaseApp from \"../../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../../assets/constant\";\nimport PostDetail from \"../../components/templates/posts/detail\";\n\nconst PagePostDetail = props => {\n  return __jsx(PostDetail, {\n    data: props.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nPagePostDetail.getInitialProps = async ({\n  query,\n  req\n}) => {\n  if (req) {\n    return {\n      data: null\n    };\n  } else {\n    const db = firebaseApp.firestore();\n    const docRef = db.collection(COLLECTIONS.POSTS);\n    const postData = await docRef.doc(query.postId).get().catch(e => console.error(e));\n    const data = postData && postData.exists ? _objectSpread({}, postData.data(), {\n      id: postData.id\n    }) : null;\n    return {\n      data: data\n    };\n  }\n};\n\nexport default PagePostDetail;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx"],"names":["React","firebaseApp","COLLECTIONS","PostDetail","PagePostDetail","props","data","getInitialProps","query","req","db","firestore","docRef","collection","POSTS","postData","doc","postId","get","catch","e","console","error","exists","id"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP;AACA,SAASC,WAAT;AAEA,OAAOC,UAAP;;AAMA,MAAMC,cAAc,GAAIC,KAAD,IAAkB;AACrC,SAAO,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFD;;AAIAF,cAAc,CAACG,eAAf,GAAiC,OAAO;AACpCC,EAAAA,KADoC;AAEpCC,EAAAA;AAFoC,CAAP,KAMqC;AAClE,MAAIA,GAAJ,EAAS;AACL,WAAO;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAP;AACH,GAFD,MAEO;AACH,UAAMI,EAAE,GAAGT,WAAW,CAACU,SAAZ,EAAX;AACA,UAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAcX,WAAW,CAACY,KAA1B,CAAf;AACA,UAAMC,QAAQ,GAAG,MAAMH,MAAM,CACxBI,GADkB,CACdR,KAAK,CAACS,MADQ,EAElBC,GAFkB,GAGlBC,KAHkB,CAGZC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAHO,CAAvB;AAIA,UAAMd,IAAI,GAAGS,QAAQ,IAAIA,QAAQ,CAACQ,MAArB,qBAAmCR,QAAQ,CAACT,IAAT,EAAnC;AAAoDkB,MAAAA,EAAE,EAAET,QAAQ,CAACS;AAAjE,SAAwE,IAArF;AACA,WAAO;AAAElB,MAAAA,IAAI,EAAEA;AAAR,KAAP;AACH;AACJ,CAnBD;;AAqBA,eAAeF,cAAf","sourcesContent":["import * as React from 'react'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\nimport { PostType } from 'types/index'\nimport PostDetail from 'components/templates/posts/detail'\n\ntype Props = {\n    data: PostType\n}\n\nconst PagePostDetail = (props: Props) => {\n    return <PostDetail data={props.data} />\n}\n\nPagePostDetail.getInitialProps = async ({\n    query,\n    req,\n}: {\n    query: { postId: string }\n    req: any\n}): Promise<{ data: null | firebase.firestore.DocumentData | '' }> => {\n    if (req) {\n        return { data: null }\n    } else {\n        const db = firebaseApp.firestore()\n        const docRef = db.collection(COLLECTIONS.POSTS)\n        const postData = await docRef\n            .doc(query.postId)\n            .get()\n            .catch(e => console.error(e))\n        const data = postData && postData.exists ? { ...postData.data(), id: postData.id } : null\n        return { data: data }\n    }\n}\n\nexport default PagePostDetail\n"]},"metadata":{},"sourceType":"module"}