{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport firebaseApp from \"../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../assets/constant\";\n\nconst PageHome = props => {\n  const {\n    data\n  } = props;\n  const LazyHome = React.lazy(() => import(\"../components/templates/home\"));\n  return __jsx(React.Suspense, {\n    fallback: __jsx(React.Fragment, null, \"loading\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(LazyHome, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nPageHome.getInitialProps = async ({\n  req\n}) => {\n  if (req) {\n    return {\n      data: null\n    };\n  } else {\n    const db = firebaseApp.firestore();\n    const docRef = db.collection(COLLECTIONS.POSTS);\n    const postData = await docRef.orderBy('timestamp', 'desc').get().catch(e => console.error(e));\n    const data = postData && postData.docs.map(doc => {\n      return _objectSpread({}, doc.data());\n    });\n    return {\n      data\n    };\n  }\n};\n\nexport default PageHome;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/index.tsx"],"names":["React","firebaseApp","COLLECTIONS","PageHome","props","data","LazyHome","lazy","getInitialProps","req","db","firestore","docRef","collection","POSTS","postData","orderBy","get","catch","e","console","error","docs","map","doc"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,WAAP;AACA,SAASC,WAAT;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAA+B;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAW,MAAM,sCAAjB,CAAjB;AACA,SACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAE,sCAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CARD;;AAUAF,QAAQ,CAACK,eAAT,GAA2B,OAAO;AAC9BC,EAAAA;AAD8B,CAAP,KAI+C;AACtE,MAAIA,GAAJ,EAAS;AACL,WAAO;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAP;AACH,GAFD,MAEO;AACH,UAAMK,EAAE,GAAGT,WAAW,CAACU,SAAZ,EAAX;AACA,UAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAcX,WAAW,CAACY,KAA1B,CAAf;AACA,UAAMC,QAAQ,GAAG,MAAMH,MAAM,CACxBI,OADkB,CACV,WADU,EACG,MADH,EAElBC,GAFkB,GAGlBC,KAHkB,CAGZC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAHO,CAAvB;AAIA,UAAMd,IAAI,GACNU,QAAQ,IACRA,QAAQ,CAACO,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACrB,+BAAYA,GAAG,CAACnB,IAAJ,EAAZ;AACH,KAFD,CAFJ;AAKA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACH;AACJ,CArBD;;AAuBA,eAAeF,QAAf","sourcesContent":["import * as React from 'react'\nimport firebase from 'firebase'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\nimport { PostType } from 'types/index'\n\ntype Props = {\n    data: PostType[]\n}\n\nconst PageHome = (props: Props): JSX.Element => {\n    const { data } = props\n    const LazyHome = React.lazy(() => import('components/templates/home'))\n    return (\n        <React.Suspense fallback={<>loading</>}>\n            <LazyHome data={data} />\n        </React.Suspense>\n    )\n}\n\nPageHome.getInitialProps = async ({\n    req,\n}: {\n    req: any\n}): Promise<{ data: void | firebase.firestore.DocumentData[] | null }> => {\n    if (req) {\n        return { data: null }\n    } else {\n        const db = firebaseApp.firestore()\n        const docRef = db.collection(COLLECTIONS.POSTS)\n        const postData = await docRef\n            .orderBy('timestamp', 'desc')\n            .get()\n            .catch(e => console.error(e))\n        const data =\n            postData &&\n            postData.docs.map(doc => {\n                return { ...doc.data() }\n            })\n        return { data }\n    }\n}\n\nexport default PageHome\n"]},"metadata":{},"sourceType":"module"}