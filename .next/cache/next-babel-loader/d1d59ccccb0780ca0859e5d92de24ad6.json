{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport * as firebase from 'firebase/app';\nimport { FirebaseAuth } from 'react-firebaseui';\nimport \"../assets/css/firebaseui-styling.global.css\";\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport * as Actions from \"../reducers/user/actions\";\nimport Main from \"../components/templates/layouts/Main\";\n\nconst Login = () => {\n  const [user, setUser] = React.useState(null);\n  const dispatch = useDispatch();\n  const actions = React.useMemo(() => {\n    return bindActionCreators(Actions, dispatch);\n  }, [dispatch]);\n  const provider = new firebase.auth.FacebookAuthProvider();\n  provider.setCustomParameters({\n    display: 'popup'\n  });\n  const uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n  React.useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => setUser(user));\n    return () => {\n      unregisterAuthObserver();\n    };\n  }, []);\n  React.useEffect(() => {\n    if (user) {\n      console.log(user);\n      actions.initialize(user);\n    }\n  }, [user]);\n  return __jsx(Main, null, __jsx(React.Fragment, null, __jsx(FirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth()\n  }), user && __jsx(\"div\", null, __jsx(\"p\", null, `name : ${user.displayName}`), __jsx(\"p\", null, `mail : ${user.email}`), __jsx(\"p\", null, `url: ${user.photoURL}`), __jsx(\"p\", null, `uid : ${user.uid}`))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}