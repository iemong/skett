{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/components/templates/register/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    width: 400px;\\n    height: 80px;\\n    margin: 0 auto;\\n    background-image: url(/img/btn_back.png);\\n    color: transparent;\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: 0 auto 50px;\\n    width: 400px;\\n    height: 80px;\\n    background-image: url(/img/btn_confirm_help.png);\\n    color: transparent;\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 4em;\\n    margin: 80px auto;\\n    text-decoration: underline;\\n    font-size: 24px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n    display: none;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    width: 520px;\\n    height: 56px;\\n    text-align: center;\\n    line-height: 56px;\\n    background-color: #efefef;\\n    font-size: 18px;\\n    color: #9fa0a0;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 520px;\\n    min-height: 320px;\\n    font-size: 18px;\\n    background-color: #efefef;\\n    padding: 17px 22px;\\n    box-sizing: border-box;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 520px;\\n    height: 56px;\\n    font-size: 18px;\\n    background-color: #efefef;\\n    text-indent: 1em;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin-bottom: 0.5em;\\n    font-size: 22px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-bottom: 50px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-bottom: 50px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    margin-bottom: 45px;\\n    padding-bottom: 33px;\\n    font-size: 38px;\\n    text-align: center;\\n    color: #000;\\n    &::before {\\n        content: '';\\n        position: absolute;\\n        left: 50%;\\n        bottom: 0;\\n        width: 100px;\\n        height: 5px;\\n        background-image: linear-gradient(to left, #00b4ed, #0091db);\\n        transform: translateX(-50%);\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 600px;\\n    height: 950px;\\n    margin: 60px auto 0;\\n    padding: 75px 40px 102px;\\n    background-color: #fff;\\n    border-radius: 16px;\\n    box-sizing: border-box;\\n    overflow: hidden;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-bottom: 100px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport useForm from 'react-hook-form';\nimport { DateTime } from 'luxon';\nimport Link from 'next/link';\nimport Main from \"../layouts/Main\";\nimport firebaseApp from \"../../../assets/utils/firebaseApp\";\nimport { COLLECTIONS, STRAGE_BACKET } from \"../../../assets/constant\";\nimport Tab from \"../../organisms/tab\";\nimport Confirm from \"../../organisms/register/confirm\";\nimport Result from \"../../organisms/register/result\";\n\nvar Register = function Register() {\n  var db = firebaseApp.firestore();\n  var storage = firebaseApp.storage(STRAGE_BACKET);\n  var storageRef = storage.ref();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentFormData = _React$useState2[0],\n      setCurrentFormData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      time = _React$useState4[0],\n      setTime = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentImgSrc = _React$useState6[0],\n      setCurrentImgSrc = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      postUrl = _React$useState8[0],\n      setPostUrl = _React$useState8[1];\n\n  var onRegister = function onRegister(data) {\n    console.log('send', data);\n    setCurrentFormData(data);\n    var now = DateTime.local().toString();\n    setTime(now);\n  };\n\n  React.useEffect(function () {\n    if (!currentFormData) return;\n    var fileList = currentFormData.image;\n    var file = fileList[0];\n    if (!['image/jpeg', 'image/png'].includes(file.type)) throw new Error('画像形式がサポートされていません');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      return setCurrentImgSrc(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  }, [currentFormData]);\n  var onSubmit = React.useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _currentFormData$desc;\n\n    var fileList, file, imageRef, imageUrl, uniqId, uniqUrl, postData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (currentFormData && time) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            fileList = currentFormData.image;\n            file = fileList[0];\n\n            if (['image/jpeg', 'image/png'].includes(file.type)) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('画像形式がサポートされていません');\n\n          case 6:\n            imageRef = storageRef.child(\"images/\".concat(file.name.split('.')[0], \"_\").concat(_Date$now(), \".jpg\"));\n            _context.next = 9;\n            return imageRef.put(file);\n\n          case 9:\n            _context.next = 11;\n            return imageRef.getDownloadURL();\n\n          case 11:\n            imageUrl = _context.sent;\n            uniqId = db.collection(COLLECTIONS.POSTS).doc();\n            uniqUrl = \"BASE_OGP_URL\".concat(uniqId);\n            postData = {\n              userId: 1,\n              title: currentFormData.title,\n              description: (_currentFormData$desc = currentFormData.description) !== null && _currentFormData$desc !== void 0 ? _currentFormData$desc : '',\n              isOpen: true,\n              createDate: time,\n              updateDate: time,\n              url: uniqUrl,\n              imageUrl: imageUrl,\n              side: 'help'\n            };\n            _context.next = 17;\n            return uniqId.set(postData)[\"catch\"](function (error) {\n              console.error(error);\n            });\n\n          case 17:\n            setPostUrl(uniqUrl);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [currentFormData, db, storageRef, time]);\n  var onBack = React.useCallback(function () {\n    reset();\n    setCurrentFormData(null);\n    setTime(null);\n    setCurrentImgSrc(null);\n  }, [reset]);\n  return __jsx(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Tab, {\n    leftContent: __jsx(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, !postUrl ? !(currentFormData && currentImgSrc && time) ? __jsx(\"form\", {\n      onSubmit: handleSubmit(onRegister),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(FormBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\u52DF\\u96C6\\u3092\\u4F5C\\u308B\"), __jsx(FormTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(TitleLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\u984C\\u540D\"), __jsx(InputText, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"\\u52DF\\u96C6\\u3057\\u305F\\u3044\\u3053\\u3068\\u3092\\u66F8\\u3044\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      ref: register({\n        required: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), errors.title && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"This field is required\")), __jsx(FormDescription, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(TitleLabel, {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u5185\\u5BB9\"), __jsx(TextArea, {\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"\\u8A73\\u7D30\\u5185\\u5BB9\\u3092\\u66F8\\u3044\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), __jsx(FormImage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(TitleLabel, {\n      htmlFor: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u5199\\u771F\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"), __jsx(ImageLabelBox, {\n      htmlFor: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\"), __jsx(InputImage, {\n      type: \"file\",\n      id: \"image\",\n      name: \"image\",\n      ref: register({\n        required: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), __jsx(Howto, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u4F7F\\u3044\\u304B\\u305F\"), __jsx(ConfirmButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\u9001\\u4FE1\"), __jsx(Link, {\n      href: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\u623B\\u308B\"))) : __jsx(Confirm, {\n      title: currentFormData.title,\n      description: currentFormData.description,\n      imgUrl: currentImgSrc,\n      updateDate: time,\n      onSubmit: onSubmit,\n      onBack: onBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : __jsx(Result, {\n      url: postUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nexport default Register;\nvar Wrapper = styled.div(_templateObject());\nvar FormBox = styled.div(_templateObject2());\nvar Title = styled.h1(_templateObject3());\nvar FormTitle = styled.div(_templateObject4());\nvar FormDescription = styled.div(_templateObject5());\nvar FormImage = styled.div(_templateObject6());\nvar TitleLabel = styled.label(_templateObject7());\nvar InputText = styled.input(_templateObject8());\nvar TextArea = styled.textarea(_templateObject9());\nvar ImageLabelBox = styled.label(_templateObject10());\nvar InputImage = styled.input(_templateObject11());\nvar Howto = styled.p(_templateObject12());\nvar ConfirmButton = styled.button(_templateObject13());\nvar BackButton = styled.button(_templateObject14());","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/components/templates/register/index.tsx"],"names":["React","styled","useForm","DateTime","Link","Main","firebaseApp","COLLECTIONS","STRAGE_BACKET","Tab","Confirm","Result","Register","db","firestore","storage","storageRef","ref","register","handleSubmit","errors","reset","useState","currentFormData","setCurrentFormData","time","setTime","currentImgSrc","setCurrentImgSrc","postUrl","setPostUrl","onRegister","data","console","log","now","local","toString","useEffect","fileList","image","file","includes","type","Error","reader","FileReader","onload","e","target","result","readAsDataURL","onSubmit","useCallback","imageRef","child","name","split","put","getDownloadURL","imageUrl","uniqId","collection","POSTS","doc","uniqUrl","postData","userId","title","description","isOpen","createDate","updateDate","url","side","set","error","onBack","required","Wrapper","div","FormBox","Title","h1","FormTitle","FormDescription","FormImage","TitleLabel","label","InputText","input","TextArea","textarea","ImageLabelBox","InputImage","Howto","p","ConfirmButton","button","BackButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,EAAsBC,aAAtB;AAEA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AAChC,MAAMC,EAAE,GAAGP,WAAW,CAACQ,SAAZ,EAAX;AACA,MAAMC,OAAO,GAAGT,WAAW,CAACS,OAAZ,CAAoBP,aAApB,CAAhB;AACA,MAAMQ,UAAU,GAAGD,OAAO,CAACE,GAAR,EAAnB;;AAHgC,iBAKkBf,OAAO,EALzB;AAAA,MAKxBgB,QALwB,YAKxBA,QALwB;AAAA,MAKdC,YALc,YAKdA,YALc;AAAA,MAKAC,MALA,YAKAA,MALA;AAAA,MAKQC,KALR,YAKQA,KALR,EAMhC;;;AANgC,wBAOcrB,KAAK,CAACsB,QAAN,CAA2C,IAA3C,CAPd;AAAA;AAAA,MAOzBC,eAPyB;AAAA,MAORC,kBAPQ;;AAAA,yBAQRxB,KAAK,CAACsB,QAAN,CAA8B,IAA9B,CARQ;AAAA;AAAA,MAQzBG,IARyB;AAAA,MAQnBC,OARmB;;AAAA,yBASU1B,KAAK,CAACsB,QAAN,CAA8B,IAA9B,CATV;AAAA;AAAA,MASzBK,aATyB;AAAA,MASVC,gBATU;;AAAA,yBAUF5B,KAAK,CAACsB,QAAN,CAAe,EAAf,CAVE;AAAA;AAAA,MAUzBO,OAVyB;AAAA,MAUhBC,UAVgB;;AAYhC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAqC;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAR,IAAAA,kBAAkB,CAACQ,IAAD,CAAlB;AACA,QAAMG,GAAG,GAAGhC,QAAQ,CAACiC,KAAT,GAAiBC,QAAjB,EAAZ;AACAX,IAAAA,OAAO,CAACS,GAAD,CAAP;AACH,GALD;;AAOAnC,EAAAA,KAAK,CAACsC,SAAN,CAAgB,YAAM;AAClB,QAAI,CAACf,eAAL,EAAsB;AACtB,QAAMgB,QAAkB,GAAGhB,eAAe,CAACiB,KAA3C;AACA,QAAMC,IAAI,GAAGF,QAAQ,CAAC,CAAD,CAArB;AACA,QAAI,CAAC,CAAC,YAAD,EAAe,WAAf,EAA4BG,QAA5B,CAAqCD,IAAI,CAACE,IAA1C,CAAL,EAAsD,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACtD,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,CAAD;AAAA,aAAYpB,gBAAgB,CAACoB,CAAC,CAACC,MAAF,CAASC,MAAV,CAA5B;AAAA,KAAhB;;AACAL,IAAAA,MAAM,CAACM,aAAP,CAAqBV,IAArB;AACH,GARD,EAQG,CAAClB,eAAD,CARH;AAUA,MAAM6B,QAAQ,GAAGpD,KAAK,CAACqD,WAAN;AAAA;AAAA;AAAA;AAAA,2BAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACzB9B,eAAe,IAAIE,IADM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEzBc,YAAAA,QAFyB,GAEJhB,eAAe,CAACiB,KAFZ;AAGzBC,YAAAA,IAHyB,GAGlBF,QAAQ,CAAC,CAAD,CAHU;;AAAA,gBAI1B,CAAC,YAAD,EAAe,WAAf,EAA4BG,QAA5B,CAAqCD,IAAI,CAACE,IAA1C,CAJ0B;AAAA;AAAA;AAAA;;AAAA,kBAI6B,IAAIC,KAAJ,CAAU,kBAAV,CAJ7B;;AAAA;AAKzBU,YAAAA,QALyB,GAKdtC,UAAU,CAACuC,KAAX,kBAA2Bd,IAAI,CAACe,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAA3B,cAAsD,WAAtD,UALc;AAAA;AAAA,mBAMzBH,QAAQ,CAACI,GAAT,CAAajB,IAAb,CANyB;;AAAA;AAAA;AAAA,mBAORa,QAAQ,CAACK,cAAT,EAPQ;;AAAA;AAOzBC,YAAAA,QAPyB;AASzBC,YAAAA,MATyB,GAShBhD,EAAE,CAACiD,UAAH,CAAcvD,WAAW,CAACwD,KAA1B,EAAiCC,GAAjC,EATgB;AAUzBC,YAAAA,OAVyB,yBAUAJ,MAVA;AAYzBK,YAAAA,QAZyB,GAYJ;AACvBC,cAAAA,MAAM,EAAE,CADe;AAEvBC,cAAAA,KAAK,EAAE7C,eAAe,CAAC6C,KAFA;AAGvBC,cAAAA,WAAW,2BAAE9C,eAAe,CAAC8C,WAAlB,yEAAiC,EAHrB;AAIvBC,cAAAA,MAAM,EAAE,IAJe;AAKvBC,cAAAA,UAAU,EAAE9C,IALW;AAMvB+C,cAAAA,UAAU,EAAE/C,IANW;AAOvBgD,cAAAA,GAAG,EAAER,OAPkB;AAQvBL,cAAAA,QAAQ,EAARA,QARuB;AASvBc,cAAAA,IAAI,EAAE;AATiB,aAZI;AAAA;AAAA,mBAwBzBb,MAAM,CAACc,GAAP,CAAWT,QAAX,WAA2B,UAAAU,KAAK,EAAI;AACtC3C,cAAAA,OAAO,CAAC2C,KAAR,CAAcA,KAAd;AACH,aAFK,CAxByB;;AAAA;AA2B/B9C,YAAAA,UAAU,CAACmC,OAAD,CAAV;;AA3B+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB,IA4Bd,CAAC1C,eAAD,EAAkBV,EAAlB,EAAsBG,UAAtB,EAAkCS,IAAlC,CA5Bc,CAAjB;AA8BA,MAAMoD,MAAM,GAAG7E,KAAK,CAACqD,WAAN,CAAkB,YAAM;AACnChC,IAAAA,KAAK;AACLG,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GALc,EAKZ,CAACP,KAAD,CALY,CAAf;AAOA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AACI,IAAA,WAAW,EACP,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACQ,OAAD,GACG,EAAEN,eAAe,IAAII,aAAnB,IAAoCF,IAAtC,IACI;AAAM,MAAA,QAAQ,EAAEN,YAAY,CAACY,UAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,WAAW,EAAC,4FAJhB;AAKI,MAAA,GAAG,EAAEb,QAAQ,CAAC;AAAE4D,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASK1D,MAAM,CAACgD,KAAP,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATrB,CAFJ,EAaI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,MAAC,QAAD;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,WAAW,EAAC,0EAHhB;AAII,MAAA,GAAG,EAAElD,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbJ,EAsBI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,EAEI,MAAC,aAAD;AAAe,MAAA,OAAO,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFJ,EAGI,MAAC,UAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,GAAG,EAAEA,QAAQ,CAAC;AAAE4D,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAtBJ,CADJ,EAkCI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAlCJ,EAmCI,MAAC,aAAD;AAAe,MAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnCJ,EAoCI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CApCJ,CADJ,GA0CI,MAAC,OAAD;AACI,MAAA,KAAK,EAAEvD,eAAe,CAAC6C,KAD3B;AAEI,MAAA,WAAW,EAAE7C,eAAe,CAAC8C,WAFjC;AAGI,MAAA,MAAM,EAAE1C,aAHZ;AAII,MAAA,UAAU,EAAEF,IAJhB;AAKI,MAAA,QAAQ,EAAE2B,QALd;AAMI,MAAA,MAAM,EAAEyB,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CP,GAqDG,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEhD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDR,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAiEH,CAnID;;AAqIA,eAAejB,QAAf;AAEA,IAAMmE,OAAO,GAAG9E,MAAM,CAAC+E,GAAV,mBAAb;AAIA,IAAMC,OAAO,GAAGhF,MAAM,CAAC+E,GAAV,oBAAb;AAWA,IAAME,KAAK,GAAGjF,MAAM,CAACkF,EAAV,oBAAX;AAmBA,IAAMC,SAAS,GAAGnF,MAAM,CAAC+E,GAAV,oBAAf;AAIA,IAAMK,eAAe,GAAGpF,MAAM,CAAC+E,GAAV,oBAArB;AAIA,IAAMM,SAAS,GAAGrF,MAAM,CAAC+E,GAAV,oBAAf;AAEA,IAAMO,UAAU,GAAGtF,MAAM,CAACuF,KAAV,oBAAhB;AAMA,IAAMC,SAAS,GAAGxF,MAAM,CAACyF,KAAV,oBAAf;AAQA,IAAMC,QAAQ,GAAG1F,MAAM,CAAC2F,QAAV,oBAAd;AASA,IAAMC,aAAa,GAAG5F,MAAM,CAACuF,KAAV,qBAAnB;AAWA,IAAMM,UAAU,GAAG7F,MAAM,CAACyF,KAAV,qBAAhB;AAIA,IAAMK,KAAK,GAAG9F,MAAM,CAAC+F,CAAV,qBAAX;AAOA,IAAMC,aAAa,GAAGhG,MAAM,CAACiG,MAAV,qBAAnB;AASA,IAAMC,UAAU,GAAGlG,MAAM,CAACiG,MAAV,qBAAhB","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\nimport useForm from 'react-hook-form'\nimport { DateTime } from 'luxon'\nimport Link from 'next/link'\nimport Main from 'components/templates/layouts/Main'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS, STRAGE_BACKET } from 'assets/constant'\nimport { PostType } from 'types/index'\nimport Tab from 'components/organisms/tab'\nimport Confirm from 'components/organisms/register/confirm'\nimport Result from 'components/organisms/register/result'\n\nconst Register = (): JSX.Element => {\n    const db = firebaseApp.firestore()\n    const storage = firebaseApp.storage(STRAGE_BACKET)\n    const storageRef = storage.ref()\n\n    const { register, handleSubmit, errors, reset } = useForm()\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [currentFormData, setCurrentFormData] = React.useState<Record<string, any> | null>(null)\n    const [time, setTime] = React.useState<string | null>(null)\n    const [currentImgSrc, setCurrentImgSrc] = React.useState<string | null>(null)\n    const [postUrl, setPostUrl] = React.useState('')\n\n    const onRegister = (data: Record<string, any>): void => {\n        console.log('send', data)\n        setCurrentFormData(data)\n        const now = DateTime.local().toString()\n        setTime(now)\n    }\n\n    React.useEffect(() => {\n        if (!currentFormData) return\n        const fileList: FileList = currentFormData.image\n        const file = fileList[0]\n        if (!['image/jpeg', 'image/png'].includes(file.type)) throw new Error('画像形式がサポートされていません')\n        const reader = new FileReader()\n        reader.onload = (e: any) => setCurrentImgSrc(e.target.result)\n        reader.readAsDataURL(file)\n    }, [currentFormData])\n\n    const onSubmit = React.useCallback(async () => {\n        if (!(currentFormData && time)) return\n        const fileList: FileList = currentFormData.image\n        const file = fileList[0]\n        if (!['image/jpeg', 'image/png'].includes(file.type)) throw new Error('画像形式がサポートされていません')\n        const imageRef = storageRef.child(`images/${file.name.split('.')[0]}_${Date.now()}.jpg`)\n        await imageRef.put(file)\n        const imageUrl = await imageRef.getDownloadURL()\n\n        const uniqId = db.collection(COLLECTIONS.POSTS).doc()\n        const uniqUrl = `BASE_OGP_URL${uniqId}`\n\n        const postData: PostType = {\n            userId: 1,\n            title: currentFormData.title,\n            description: currentFormData.description ?? '',\n            isOpen: true,\n            createDate: time,\n            updateDate: time,\n            url: uniqUrl,\n            imageUrl,\n            side: 'help',\n        }\n\n        await uniqId.set(postData).catch(error => {\n            console.error(error)\n        })\n        setPostUrl(uniqUrl)\n    }, [currentFormData, db, storageRef, time])\n\n    const onBack = React.useCallback(() => {\n        reset()\n        setCurrentFormData(null)\n        setTime(null)\n        setCurrentImgSrc(null)\n    }, [reset])\n\n    return (\n        <Main>\n            <Tab\n                leftContent={\n                    <Wrapper>\n                        {!postUrl ? (\n                            !(currentFormData && currentImgSrc && time) ? (\n                                <form onSubmit={handleSubmit(onRegister)}>\n                                    <FormBox>\n                                        <Title>募集を作る</Title>\n                                        <FormTitle>\n                                            <TitleLabel htmlFor=\"title\">題名</TitleLabel>\n                                            <InputText\n                                                type=\"text\"\n                                                id=\"title\"\n                                                name=\"title\"\n                                                placeholder=\"募集したいことを書いてください\"\n                                                ref={register({ required: true })}\n                                            />\n                                            {errors.title && <span>This field is required</span>}\n                                        </FormTitle>\n                                        <FormDescription>\n                                            <TitleLabel htmlFor=\"description\">内容</TitleLabel>\n                                            <TextArea\n                                                id=\"description\"\n                                                name=\"description\"\n                                                placeholder=\"詳細内容を書いてください\"\n                                                ref={register}\n                                            />\n                                        </FormDescription>\n                                        <FormImage>\n                                            <TitleLabel htmlFor=\"image\">写真アップロード</TitleLabel>\n                                            <ImageLabelBox htmlFor=\"image\">ファイルを選択</ImageLabelBox>\n                                            <InputImage\n                                                type=\"file\"\n                                                id=\"image\"\n                                                name=\"image\"\n                                                ref={register({ required: true })}\n                                            />\n                                        </FormImage>\n                                    </FormBox>\n                                    <Howto>使いかた</Howto>\n                                    <ConfirmButton type=\"submit\">送信</ConfirmButton>\n                                    <Link href={'/'}>\n                                        <BackButton>戻る</BackButton>\n                                    </Link>\n                                </form>\n                            ) : (\n                                <Confirm\n                                    title={currentFormData.title}\n                                    description={currentFormData.description}\n                                    imgUrl={currentImgSrc}\n                                    updateDate={time}\n                                    onSubmit={onSubmit}\n                                    onBack={onBack}\n                                />\n                            )\n                        ) : (\n                            <Result url={postUrl} />\n                        )}\n                    </Wrapper>\n                }\n            />\n        </Main>\n    )\n}\n\nexport default Register\n\nconst Wrapper = styled.div`\n    padding-bottom: 100px;\n`\n\nconst FormBox = styled.div`\n    width: 600px;\n    height: 950px;\n    margin: 60px auto 0;\n    padding: 75px 40px 102px;\n    background-color: #fff;\n    border-radius: 16px;\n    box-sizing: border-box;\n    overflow: hidden;\n`\n\nconst Title = styled.h1`\n    position: relative;\n    margin-bottom: 45px;\n    padding-bottom: 33px;\n    font-size: 38px;\n    text-align: center;\n    color: #000;\n    &::before {\n        content: '';\n        position: absolute;\n        left: 50%;\n        bottom: 0;\n        width: 100px;\n        height: 5px;\n        background-image: linear-gradient(to left, #00b4ed, #0091db);\n        transform: translateX(-50%);\n    }\n`\n\nconst FormTitle = styled.div`\n    margin-bottom: 50px;\n`\n\nconst FormDescription = styled.div`\n    margin-bottom: 50px;\n`\n\nconst FormImage = styled.div``\n\nconst TitleLabel = styled.label`\n    display: block;\n    margin-bottom: 0.5em;\n    font-size: 22px;\n`\n\nconst InputText = styled.input`\n    width: 520px;\n    height: 56px;\n    font-size: 18px;\n    background-color: #efefef;\n    text-indent: 1em;\n`\n\nconst TextArea = styled.textarea`\n    width: 520px;\n    min-height: 320px;\n    font-size: 18px;\n    background-color: #efefef;\n    padding: 17px 22px;\n    box-sizing: border-box;\n`\n\nconst ImageLabelBox = styled.label`\n    display: block;\n    width: 520px;\n    height: 56px;\n    text-align: center;\n    line-height: 56px;\n    background-color: #efefef;\n    font-size: 18px;\n    color: #9fa0a0;\n`\n\nconst InputImage = styled.input`\n    display: none;\n`\n\nconst Howto = styled.p`\n    width: 4em;\n    margin: 80px auto;\n    text-decoration: underline;\n    font-size: 24px;\n`\n\nconst ConfirmButton = styled.button`\n    display: block;\n    margin: 0 auto 50px;\n    width: 400px;\n    height: 80px;\n    background-image: url(/img/btn_confirm_help.png);\n    color: transparent;\n`\n\nconst BackButton = styled.button`\n    display: block;\n    width: 400px;\n    height: 80px;\n    margin: 0 auto;\n    background-image: url(/img/btn_back.png);\n    color: transparent;\n`\n"]},"metadata":{},"sourceType":"module"}