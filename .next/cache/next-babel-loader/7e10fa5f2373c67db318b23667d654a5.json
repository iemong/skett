{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/components/templates/home/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: fixed;\\n    right: 0;\\n    bottom: 100px;\\n    display: block;\\n    width: 251px;\\n    height: 81px;\\n    background-image: url(/img/btn_add.png);\\n    color: transparent;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 60px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport Link from 'next/link';\nimport Main from \"../layouts/Main\";\nimport Tab from \"../../organisms/tab\";\nimport Card from \"../../molecules/card\";\nimport firebaseApp from \"../../../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../../../assets/constant\";\n\nvar Home = function Home() {\n  var db = firebaseApp.firestore();\n  var docRef = db.collection(COLLECTIONS.POSTS);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      posts = _React$useState2[0],\n      setPosts = _React$useState2[1];\n\n  var loadPostsData = React.useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var data, docs, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return docRef.orderBy('timestamp', 'desc').get()[\"catch\"](function (e) {\n              return console.error(e);\n            });\n\n          case 2:\n            data = _context.sent;\n\n            if (data) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            docs = data.docs;\n            posts = docs.map(function (doc) {\n              return doc.data();\n            });\n            setPosts(posts);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [docRef]);\n  React.useEffect(function () {\n    loadPostsData();\n  }, []);\n  var helpPosts = React.useMemo(function () {\n    return posts.map(function (post, index) {\n      var _post$id;\n\n      return __jsx(Card, {\n        key: index,\n        imgUrl: post.imageUrl,\n        description: post.title,\n        link: \"/posts/\".concat((_post$id = post.id) !== null && _post$id !== void 0 ? _post$id : ''),\n        side: 'help',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    });\n  }, [posts]);\n  var supportPosts = React.useMemo(function () {\n    return posts.map(function (post, index) {\n      var _post$id2;\n\n      return __jsx(Card, {\n        key: index,\n        imgUrl: post.imageUrl,\n        description: post.title,\n        link: \"/posts/\".concat((_post$id2 = post.id) !== null && _post$id2 !== void 0 ? _post$id2 : ''),\n        side: 'support',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    });\n  }, [posts]);\n\n  var helpPostElement = __jsx(ItemWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, helpPosts);\n\n  var supportPostElement = __jsx(ItemWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, supportPosts);\n\n  return __jsx(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Tab, {\n    leftContent: helpPostElement,\n    rightContent: supportPostElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: '/register',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(AddButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\u58F0\\u306E\\u8FFD\\u52A0\"))));\n};\n\nexport default Home;\nvar ItemWrapper = styled.div(_templateObject());\nvar AddButton = styled.button(_templateObject2());","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/components/templates/home/index.tsx"],"names":["React","styled","Link","Main","Tab","Card","firebaseApp","COLLECTIONS","Home","db","firestore","docRef","collection","POSTS","useState","posts","setPosts","loadPostsData","useCallback","orderBy","get","e","console","error","data","docs","map","doc","useEffect","helpPosts","useMemo","post","index","imageUrl","title","id","supportPosts","helpPostElement","supportPostElement","ItemWrapper","div","AddButton","button"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\nimport Link from 'next/link'\nimport { PostType } from 'types/index'\nimport Main from 'components/templates/layouts/Main'\nimport Tab from 'components/organisms/tab'\nimport Card from 'components/molecules/card'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\n\nconst Home = (): JSX.Element => {\n    const db = firebaseApp.firestore()\n    const docRef = db.collection(COLLECTIONS.POSTS)\n    const [posts, setPosts] = React.useState<PostType[]>([])\n\n    const loadPostsData = React.useCallback(async () => {\n        const data = await docRef\n            .orderBy('timestamp', 'desc')\n            .get()\n            .catch(e => console.error(e))\n        if (!data) return\n        const docs = data.docs\n        const posts = docs.map(doc => doc.data() as PostType)\n        setPosts(posts)\n    }, [docRef])\n\n    React.useEffect(() => {\n        loadPostsData()\n    }, [])\n\n    const helpPosts = React.useMemo(\n        () =>\n            posts.map((post, index) => (\n                <Card\n                    key={index}\n                    imgUrl={post.imageUrl}\n                    description={post.title}\n                    link={`/posts/${post.id ?? ''}`}\n                    side={'help'}\n                />\n            )),\n        [posts],\n    )\n\n    const supportPosts = React.useMemo(\n        () =>\n            posts.map((post, index) => (\n                <Card\n                    key={index}\n                    imgUrl={post.imageUrl}\n                    description={post.title}\n                    link={`/posts/${post.id ?? ''}`}\n                    side={'support'}\n                />\n            )),\n        [posts],\n    )\n\n    const helpPostElement = <ItemWrapper>{helpPosts}</ItemWrapper>\n    const supportPostElement = <ItemWrapper>{supportPosts}</ItemWrapper>\n\n    return (\n        <Main>\n            <React.Fragment>\n                <Tab leftContent={helpPostElement} rightContent={supportPostElement} />\n                <Link href={'/register'}>\n                    <AddButton>声の追加</AddButton>\n                </Link>\n            </React.Fragment>\n        </Main>\n    )\n}\n\nexport default Home\n\nconst ItemWrapper = styled.div`\n    margin-top: 60px;\n`\n\nconst AddButton = styled.button`\n    position: fixed;\n    right: 0;\n    bottom: 100px;\n    display: block;\n    width: 251px;\n    height: 81px;\n    background-image: url(/img/btn_add.png);\n    color: transparent;\n`\n"]},"metadata":{},"sourceType":"module"}