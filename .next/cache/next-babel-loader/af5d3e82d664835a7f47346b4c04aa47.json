{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport firebaseApp from \"../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../assets/constant\";\nimport Home from \"../components/templates/home\";\n\nvar PageHome = function PageHome(props) {\n  var data = props.data;\n  return __jsx(Home, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nPageHome.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var req, db, docRef, postData, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req;\n\n            if (!req) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              data: null\n            });\n\n          case 5:\n            db = firebaseApp.firestore();\n            docRef = db.collection(COLLECTIONS.POSTS);\n            _context.next = 9;\n            return docRef.orderBy('timestamp', 'desc').get()[\"catch\"](function (e) {\n              return console.error(e);\n            });\n\n          case 9:\n            postData = _context.sent;\n            data = postData && postData.docs.map(function (doc) {\n              return _objectSpread({}, doc.data());\n            });\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default PageHome;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/index.tsx"],"names":["React","firebaseApp","COLLECTIONS","Home","PageHome","props","data","getInitialProps","req","db","firestore","docRef","collection","POSTS","orderBy","get","e","console","error","postData","docs","map","doc"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,WAAP;AACA,SAASC,WAAT;AACA,OAAOC,IAAP;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAA+B;AAAA,MACpCC,IADoC,GAC3BD,KAD2B,CACpCC,IADoC;AAE5C,SAAO,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAHD;;AAKAF,QAAQ,CAACG,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,GADuB,QACvBA,GADuB;;AAAA,iBAKnBA,GALmB;AAAA;AAAA;AAAA;;AAAA,6CAMZ;AAAEF,cAAAA,IAAI,EAAE;AAAR,aANY;;AAAA;AAQbG,YAAAA,EARa,GAQRR,WAAW,CAACS,SAAZ,EARQ;AASbC,YAAAA,MATa,GASJF,EAAE,CAACG,UAAH,CAAcV,WAAW,CAACW,KAA1B,CATI;AAAA;AAAA,mBAUIF,MAAM,CACxBG,OADkB,CACV,WADU,EACG,MADH,EAElBC,GAFkB,YAGZ,UAAAC,CAAC;AAAA,qBAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAAJ;AAAA,aAHW,CAVJ;;AAAA;AAUbG,YAAAA,QAVa;AAcbb,YAAAA,IAda,GAefa,QAAQ,IACRA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACrB,uCAAYA,GAAG,CAAChB,IAAJ,EAAZ;AACH,aAFD,CAhBe;AAAA,6CAmBZ;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aAnBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAuBA,eAAeF,QAAf","sourcesContent":["import * as React from 'react'\nimport firebase from 'firebase'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\nimport Home from 'components/templates/home'\nimport { PostType } from 'types/index'\n\ntype Props = {\n    data: PostType[]\n}\n\nconst PageHome = (props: Props): JSX.Element => {\n    const { data } = props\n    return <Home data={data} />\n}\n\nPageHome.getInitialProps = async ({\n    req,\n}: {\n    req: any\n}): Promise<{ data: void | firebase.firestore.DocumentData[] }> => {\n    if (req) {\n        return { data: null }\n    } else {\n        const db = firebaseApp.firestore()\n        const docRef = db.collection(COLLECTIONS.POSTS)\n        const postData = await docRef\n            .orderBy('timestamp', 'desc')\n            .get()\n            .catch(e => console.error(e))\n        const data =\n            postData &&\n            postData.docs.map(doc => {\n                return { ...doc.data() }\n            })\n        return { data }\n    }\n}\n\nexport default PageHome\n"]},"metadata":{},"sourceType":"module"}