{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseApp from \"../../assets/utils/firebaseApp\";\nimport { COLLECTIONS } from \"../../assets/constant\"; // import { PostType } from 'types/index'\n\nimport PostDetail from \"../../components/templates/posts/detail\";\n\nconst PagePostDetail = () => {\n  const router = useRouter();\n  const postId = router.query.postId;\n  const [data, setData] = React.useState(null);\n  const loadFirestore = React.useCallback(async () => {\n    console.log(postId);\n    if (!postId) return __jsx(React.Fragment, null);\n    const db = firebaseApp.firestore();\n    const docRef = db.collection(COLLECTIONS.POSTS);\n    const postData = await docRef.doc(postId).get().catch(e => console.error(e));\n    const data = postData && postData.exists ? _objectSpread({}, postData.data(), {\n      id: postData.id\n    }) : null;\n    setData(data);\n  }, [postId]);\n  React.useEffect(() => {\n    loadFirestore();\n  }, [loadFirestore]);\n  return __jsx(PostDetail, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nexport default PagePostDetail;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/posts/[postId].tsx"],"names":["React","useRouter","firebaseApp","COLLECTIONS","PostDetail","PagePostDetail","router","postId","query","data","setData","useState","loadFirestore","useCallback","console","log","db","firestore","docRef","collection","POSTS","postData","doc","get","catch","e","error","exists","id","useEffect"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,gC,CACA;;AACA,OAAOC,UAAP;;AAEA,MAAMC,cAAc,GAAG,MAAmB;AACtC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaD,MAA5B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAA2B,IAA3B,CAAxB;AAEA,QAAMC,aAAa,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAY;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,QAAI,CAACA,MAAL,EAAa,OAAO,2BAAP;AACb,UAAMS,EAAE,GAAGd,WAAW,CAACe,SAAZ,EAAX;AACA,UAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAchB,WAAW,CAACiB,KAA1B,CAAf;AACA,UAAMC,QAAQ,GAAG,MAAMH,MAAM,CACxBI,GADkB,CACdf,MADc,EAElBgB,GAFkB,GAGlBC,KAHkB,CAGZC,CAAC,IAAIX,OAAO,CAACY,KAAR,CAAcD,CAAd,CAHO,CAAvB;AAIA,UAAMhB,IAAI,GAAGY,QAAQ,IAAIA,QAAQ,CAACM,MAArB,qBAAmCN,QAAQ,CAACZ,IAAT,EAAnC;AAAoDmB,MAAAA,EAAE,EAAEP,QAAQ,CAACO;AAAjE,SAAwE,IAArF;AACAlB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAXqB,EAWnB,CAACF,MAAD,CAXmB,CAAtB;AAaAP,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AAClBjB,IAAAA,aAAa;AAChB,GAFD,EAEG,CAACA,aAAD,CAFH;AAIA,SAAO,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAvBD;;AAyBA,eAAeJ,cAAf","sourcesContent":["import * as React from 'react'\nimport { useRouter } from 'next/router'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\n// import { PostType } from 'types/index'\nimport PostDetail from 'components/templates/posts/detail'\n\nconst PagePostDetail = (): JSX.Element => {\n    const router = useRouter()\n    const postId = router.query.postId as string\n    const [data, setData] = React.useState<any | null>(null)\n\n    const loadFirestore = React.useCallback(async () => {\n        console.log(postId)\n        if (!postId) return <></>\n        const db = firebaseApp.firestore()\n        const docRef = db.collection(COLLECTIONS.POSTS)\n        const postData = await docRef\n            .doc(postId)\n            .get()\n            .catch(e => console.error(e))\n        const data = postData && postData.exists ? { ...postData.data(), id: postData.id } : null\n        setData(data)\n    }, [postId])\n\n    React.useEffect(() => {\n        loadFirestore()\n    }, [loadFirestore])\n\n    return <PostDetail data={data} />\n}\n\nexport default PagePostDetail\n"]},"metadata":{},"sourceType":"module"}