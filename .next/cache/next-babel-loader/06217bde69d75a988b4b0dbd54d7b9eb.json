{"ast":null,"code":"var _jsxFileName = \"/Users/irie-shinnosuke/Documents/works/skett/skett/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport * as firebase from 'firebase/app';\nimport { FirebaseAuth } from 'react-firebaseui';\nimport \"../assets/css/firebaseui-styling.global.css\";\nimport { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport * as Actions from \"../reducers/user/actions\";\nimport Main from \"../components/templates/layouts/Main\";\n\nconst Login = () => {\n  const [user, setUser] = React.useState(null);\n  const dispatch = useDispatch();\n  const actions = React.useMemo(() => {\n    return bindActionCreators(Actions, dispatch);\n  }, [dispatch]);\n  const provider = new firebase.auth.FacebookAuthProvider();\n  provider.setCustomParameters({\n    display: 'popup'\n  });\n  const uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n  React.useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => setUser(user));\n    return () => {\n      unregisterAuthObserver();\n    };\n  }, []);\n  React.useEffect(() => {\n    if (user) {\n      console.log(user);\n      actions.initialize(user);\n    }\n  }, [user]);\n  return __jsx(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(FirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), user && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, `name : ${user.displayName}`), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, `mail : ${user.email}`), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, `url: ${user.photoURL}`), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, `uid : ${user.uid}`))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/irie-shinnosuke/Documents/works/skett/skett/pages/login.tsx"],"names":["React","firebase","FirebaseAuth","bindActionCreators","useDispatch","Actions","Main","Login","user","setUser","useState","dispatch","actions","useMemo","provider","auth","FacebookAuthProvider","setCustomParameters","display","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","TwitterAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","unregisterAuthObserver","onAuthStateChanged","console","log","initialize","displayName","email","photoURL","uid"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ;AACA,OAAOC,IAAP;;AAEA,MAAMC,KAAK,GAAG,MAAmB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAoB,IAApB,CAAxB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAM;AAChC,WAAOV,kBAAkB,CAACE,OAAD,EAAUM,QAAV,CAAzB;AACH,GAFe,EAEb,CAACA,QAAD,CAFa,CAAhB;AAGA,QAAMG,QAAQ,GAAG,IAAIb,QAAQ,CAACc,IAAT,CAAcC,oBAAlB,EAAjB;AACAF,EAAAA,QAAQ,CAACG,mBAAT,CAA6B;AACzBC,IAAAA,OAAO,EAAE;AADgB,GAA7B;AAIA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,UAAU,EAAE,OADC;AAEbC,IAAAA,aAAa,EAAE,CACXpB,QAAQ,CAACc,IAAT,CAAcO,iBAAd,CAAgCC,WADrB,EAEXtB,QAAQ,CAACc,IAAT,CAAcC,oBAAd,CAAmCO,WAFxB,EAGXtB,QAAQ,CAACc,IAAT,CAAcS,mBAAd,CAAkCD,WAHvB,CAFF;AAObE,IAAAA,SAAS,EAAE;AACPC,MAAAA,2BAA2B,EAAE,MAAM;AAD5B;AAPE,GAAjB;AAYA1B,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AAClB,UAAMC,sBAAsB,GAAG3B,QAAQ,CAACc,IAAT,GAAgBc,kBAAhB,CAAoCrB,IAAD,IAAgCC,OAAO,CAACD,IAAD,CAA1E,CAA/B;AACA,WAAO,MAAY;AACfoB,MAAAA,sBAAsB;AACzB,KAFD;AAGH,GALD,EAKG,EALH;AAOA5B,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AAClB,QAAInB,IAAJ,EAAU;AACNsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACAI,MAAAA,OAAO,CAACoB,UAAR,CAAmBxB,IAAnB;AACH;AACJ,GALD,EAKG,CAACA,IAAD,CALH;AAOA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEW,QAAxB;AAAkC,IAAA,YAAY,EAAElB,QAAQ,CAACc,IAAT,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKP,IAAI,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,UAASA,IAAI,CAACyB,WAAY,EAA/B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,UAASzB,IAAI,CAAC0B,KAAM,EAAzB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,QAAO1B,IAAI,CAAC2B,QAAS,EAA1B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,SAAQ3B,IAAI,CAAC4B,GAAI,EAAtB,CAJJ,CAHR,CADJ,CADJ;AAeH,CApDD;;AAsDA,eAAe7B,KAAf","sourcesContent":["import * as React from 'react'\nimport * as firebase from 'firebase/app'\nimport { FirebaseAuth } from 'react-firebaseui'\nimport 'assets/css/firebaseui-styling.global.css'\nimport { bindActionCreators } from 'redux'\nimport { useDispatch } from 'react-redux'\nimport * as Actions from 'reducers/user/actions'\nimport Main from 'components/templates/layouts/Main'\n\nconst Login = (): JSX.Element => {\n    const [user, setUser] = React.useState<any>(null)\n    const dispatch = useDispatch()\n    const actions = React.useMemo(() => {\n        return bindActionCreators(Actions, dispatch)\n    }, [dispatch])\n    const provider = new firebase.auth.FacebookAuthProvider()\n    provider.setCustomParameters({\n        display: 'popup',\n    })\n\n    const uiConfig = {\n        signInFlow: 'popup',\n        signInOptions: [\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false,\n        },\n    }\n\n    React.useEffect(() => {\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged((user: firebase.User | null) => setUser(user))\n        return (): void => {\n            unregisterAuthObserver()\n        }\n    }, [])\n\n    React.useEffect(() => {\n        if (user) {\n            console.log(user)\n            actions.initialize(user)\n        }\n    }, [user])\n\n    return (\n        <Main>\n            <React.Fragment>\n                <FirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                {user && (\n                    <div>\n                        <p>{`name : ${user.displayName}`}</p>\n                        <p>{`mail : ${user.email}`}</p>\n                        <p>{`url: ${user.photoURL}`}</p>\n                        <p>{`uid : ${user.uid}`}</p>\n                    </div>\n                )}\n            </React.Fragment>\n        </Main>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}