{"version":3,"file":"static/webpack/static/development/pages/posts/[postId].js.228a3647dd66dacdd1f7.hot-update.js","sources":["webpack:///./components/templates/posts/detail.tsx"],"sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport { useSelector } from 'react-redux'\nimport Main from 'components/templates/layouts/Main'\nimport { PostType } from 'types/index'\nimport Tab from 'components/organisms/tab'\nimport DetailCard from 'components/molecules/detailCard'\nimport { State as rootState } from 'reducers'\nimport ThemeButton from 'components/molecules/theme/ThemeButton'\nimport Button from 'components/atoms/Button'\nimport useLogin from 'components/hooks/useLogin'\nimport Applicant from 'components/organisms/post/Applicant'\n\ntype Props = {\n    data: PostType | null\n}\n\nconst PostDetail = (props: Props): JSX.Element => {\n    const { data } = props\n\n    const { side } = useSelector((state: rootState) => state.rootReducer.tab)\n    const user = useLogin()\n\n    const isMyPost = React.useMemo(() => {\n        return user?.uid === data?.user.uid\n    }, [data, user])\n\n    const postElement = React.useMemo(() => {\n        if (!data) return <>Loading</>\n        return (\n            <Wrapper>\n                <DetailCardWithMargin\n                    imgUrl={data.imageUrl}\n                    title={data.title}\n                    description={data.description}\n                    user={data.user}\n                    side={side}\n                    updateDate={data.updateDate}\n                />\n                {isMyPost && <Applicant users={data?.applicants} side={side} />}\n                {user?.uid === data.user?.uid ? (\n                    <Link href={{ pathname: '/edit', query: { postId: data.id, side } }}>\n                        <EditButton width={'400px'} height={'80px'}>\n                            編集する\n                        </EditButton>\n                    </Link>\n                ) : (\n                    <Link href={{ pathname: '/apply', query: { postId: data.id } }}>\n                        <ApplyButton width={'400px'} height={'80px'}>\n                            応募する\n                        </ApplyButton>\n                    </Link>\n                )}\n                <BackButton width={'400px'} height={'80px'} styleType=\"cancel\" onClick={(): void => Router.back()}>\n                    戻る\n                </BackButton>\n            </Wrapper>\n        )\n    }, [data, isMyPost, side, user])\n\n    const tabElement = React.useMemo(() => {\n        return side === 'help' ? (\n            <Tab leftContent={postElement} tabSide=\"left\" onClickLeft={(): void => Router.back()} />\n        ) : (\n            <Tab rightContent={postElement} tabSide=\"right\" onClickRight={(): void => Router.back()} />\n        )\n    }, [postElement, side])\n    return <Main>{tabElement}</Main>\n}\n\nexport default PostDetail\n\nconst Wrapper = styled.div`\n    margin-top: 60px;\n    padding-bottom: 100px;\n`\n\nconst DetailCardWithMargin = styled(DetailCard)`\n    margin-bottom: 80px;\n`\n\nconst EditButton = styled(ThemeButton)`\n    margin: 0 auto 48px;\n`\n\nconst ApplyButton = styled(ThemeButton)`\n    margin: 0 auto 48px;\n`\n\nconst BackButton = styled(Button)`\n    margin: 0 auto;\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AAIA;AAIA;AAIA;;;;A","sourceRoot":""}