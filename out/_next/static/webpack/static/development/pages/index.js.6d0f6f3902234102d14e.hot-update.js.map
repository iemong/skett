{"version":3,"file":"static/webpack/static/development/pages/index.js.6d0f6f3902234102d14e.hot-update.js","sources":["webpack:///./components/templates/home/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\nimport Link from 'next/link'\nimport { useSelector } from 'react-redux'\nimport { PostType } from 'types/index'\nimport Main from 'components/templates/layouts/Main'\nimport Tab from 'components/organisms/tab'\nimport Card from 'components/molecules/card'\nimport firebaseApp from 'assets/utils/firebaseApp'\nimport { COLLECTIONS } from 'assets/constant'\nimport { State as rootState } from 'reducers'\n\nconst Home = (): JSX.Element => {\n    const db = firebaseApp.firestore()\n    const docRef = db.collection(COLLECTIONS.POSTS)\n    const [posts, setPosts] = React.useState<PostType[]>([])\n\n    const { side } = useSelector((state: rootState) => state.rootReducer.tab)\n\n    const loadPostsData = React.useCallback(async () => {\n        const data = await docRef\n            .where('isEnd', '==', false)\n            .where('isDeleted', '==', false)\n            .orderBy('timestamp', 'desc')\n            .get()\n            .catch(e => console.error(e))\n        if (!data) return\n        const docs = data.docs\n        const posts = docs.map(doc => doc.data() as PostType)\n        setPosts(posts)\n    }, [docRef])\n\n    React.useEffect(() => {\n        loadPostsData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const helpPosts = React.useMemo(() => {\n        const filteredPosts = posts.filter(post => post.side === 'help')\n        return filteredPosts.map((post, index) => (\n            <Card\n                key={index}\n                imgUrl={post.imageUrl}\n                description={post.title}\n                link={`/posts/${post.id ?? ''}`}\n                side={'help'}\n            />\n        ))\n    }, [posts])\n\n    const supportPosts = React.useMemo(() => {\n        const filteredPosts = posts.filter(post => post.side === 'support')\n        return filteredPosts.map((post, index) => (\n            <Card\n                key={index}\n                imgUrl={post.imageUrl}\n                description={post.title}\n                link={`/posts/${post.id ?? ''}`}\n                side={'support'}\n            />\n        ))\n    }, [posts])\n\n    const organizationPosts = React.useMemo(() => {\n        const filteredPosts = posts.filter(post => post.side === 'organization')\n        return filteredPosts.map((post, index) => (\n            <Card\n                key={index}\n                imgUrl={post.imageUrl}\n                description={post.title}\n                link={`/posts/${post.id ?? ''}`}\n                side={'organization'}\n            />\n        ))\n    }, [posts])\n\n    const helpPostElement = <ItemWrapper>{helpPosts}</ItemWrapper>\n    const supportPostElement = <ItemWrapper>{supportPosts}</ItemWrapper>\n    const organizationPostElement = <ItemWrapper>{organizationPosts}</ItemWrapper>\n\n    const href = React.useMemo(() => (side === 'organization' ? 'https://forms.gle/xqosY3davqivXJDd7' : '/register'), [side])\n    const target = React.useMemo(() => (side === 'organization' ? '_blank' : '_self'), [side])\n\n    return (\n        <Main>\n            <React.Fragment>\n                <ContentsContainer>\n                    <Tab\n                        helpContents={helpPostElement}\n                        supportContents={supportPostElement}\n                        organizationContents={organizationPostElement}\n                        tabSide={side}\n                    />\n                </ContentsContainer>\n                <Link href={href}>\n                    <AddButton href={href} target={target}>\n                        声をつくる\n                    </AddButton>\n                </Link>\n            </React.Fragment>\n        </Main>\n    )\n}\n\nexport default Home\n\nconst ItemWrapper = styled.div`\n    margin-top: 60px;\n`\n\nconst AddButton = styled.a`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 120px;\n    background-image: linear-gradient(to right, #e8563a 0%, #e53a2b 100%);\n    color: #fff;\n    font-size: 28px;\n    font-weight: bold;\n    text-decoration: none;\n\n    &::before {\n        content: '+';\n        font-size: 48px;\n        font-weight: normal;\n        margin-right: 8px;\n    }\n\n    @media (min-width: 751px) {\n        max-width: 780px;\n        height: 60px;\n        left: 0;\n        right: 0;\n        margin: 0 auto;\n        font-size: 14px;\n\n        &::before {\n            font-size: 24px;\n        }\n    }\n`\n\nconst ContentsContainer = styled.div`\n    @media (min-width: 751px) {\n        & > div > div:nth-child(2) > div:nth-child(2) {\n            display: flex;\n            flex-wrap: wrap;\n            max-width: 780px;\n            width: 100%;\n            margin: 0 auto;\n            &:after {\n                width: calc(100% / 2 - 32px);\n                display: block;\n                content: '';\n            }\n\n            & > div {\n                width: calc(100% / 2 - 32px);\n            }\n        }\n    }\n`"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAPA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AAIA;AAoCA;;;;A","sourceRoot":""}