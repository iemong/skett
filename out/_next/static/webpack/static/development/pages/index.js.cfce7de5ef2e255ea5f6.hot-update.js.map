{"version":3,"file":"static/webpack/static/development/pages/index.js.cfce7de5ef2e255ea5f6.hot-update.js","sources":["webpack:///./components/organisms/tab/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\nimport Router, { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Z_INDEX_LIST } from 'assets/constant'\nimport * as Actions from 'reducers/tab/actions'\nimport { State as rootState } from 'reducers'\n\ntype Props = {\n    leftContent?: string | JSX.Element\n    rightContent?: string | JSX.Element\n    onClickLeft?: () => void\n    onClickRight?: () => void\n    className?: string\n    tabSide: 'right' | 'left'\n}\n\nconst Tab = (props: Props): JSX.Element => {\n    const { leftContent, rightContent, onClickLeft, onClickRight, className, tabSide } = props\n    const router = useRouter()\n\n    const [tabName, setTabName] = React.useState<'left' | 'right'>(tabSide)\n\n    const { side } = useSelector((state: rootState) => state.rootReducer.tab)\n    const dispatch = useDispatch()\n    const actions = React.useMemo(() => {\n        return bindActionCreators(Actions, dispatch)\n    }, [dispatch])\n\n    React.useEffect(() => {\n        if (router.query.side && router.query.side !== side) {\n        }\n    }, [router])\n    const helpClickHandler = React.useCallback((): void => {\n        if (router.pathname !== '/') return\n        setTabName('left')\n        actions.update('help')\n        if (onClickLeft) onClickLeft()\n        if (!rightContent) Router.push('/')\n    }, [actions, onClickLeft, rightContent, router.pathname])\n\n    const supportClickHandler = React.useCallback((): void => {\n        if (router.pathname !== '/') return\n        setTabName('right')\n        actions.update('support')\n        if (onClickRight) onClickRight()\n        if (!leftContent) Router.push('/')\n    }, [actions, leftContent, onClickRight, router.pathname])\n\n    return (\n        <Tabs className={className}>\n            <TabList>\n                <TabHelp onClick={helpClickHandler} data-selected={tabName === 'left'} />\n                <TabSupport onClick={supportClickHandler} data-selected={tabName === 'right'} />\n            </TabList>\n            {(tabName === 'left' && <TabPanel>{leftContent}</TabPanel>) ||\n                (tabName === 'right' && <TabPanel>{rightContent}</TabPanel>)}\n        </Tabs>\n    )\n}\n\nexport default Tab\n\nconst Tabs = styled.div``\nconst TabList = styled.div`\n    position: relative;\n    height: 91px;\n`\n\nconst TabHelp = styled.div`\n    position: absolute;\n    width: 750px;\n    height: 100%;\n    box-sizing: border-box;\n    background-image: url(/img/tab_help_off.png);\n    z-index: ${Z_INDEX_LIST.TAB_FRONT};\n    &[data-selected='true'] {\n        background-image: url(/img/tab_help_on.png);\n        z-index: ${Z_INDEX_LIST.TAB_FRONT};\n        pointer-events: none;\n    }\n`\nconst TabSupport = styled.div`\n    position: absolute;\n    width: 750px;\n    height: 100%;\n    box-sizing: border-box;\n    background-image: url(/img/tab_support_off.png);\n    z-index: ${Z_INDEX_LIST.TAB_BACK};\n    &[data-selected='true'] {\n        background-image: url(/img/tab_support_on.png);\n        z-index: ${Z_INDEX_LIST.TAB_FRONT};\n        pointer-events: none;\n    }\n`\n\nconst TabPanel = styled.div``\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AANA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAKA;AAaA;AAcA;;;;A","sourceRoot":""}